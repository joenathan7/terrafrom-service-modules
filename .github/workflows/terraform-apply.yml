name: Terraform Apply

on:
  push:
    branches: [ main ]
    paths:
      - 'modules/**'
      - 'workflows/terraform-apply.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'modules/**'
      - 'workflows/terraform-apply.yml'

jobs:
  terraform-plan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.5.0"

      # - name: Setup Google Cloud CLI
      #   uses: google-github-actions/setup-gcloud@v2
      #   with:
      #     project_id: ${{ secrets.GCP_PROJECT_ID }}
      #     service_account_key: ${{ secrets.GCP_SA_KEY }}
      #     export_default_credentials: true

      # - name: Configure Terraform Backend
      #   run: |
      #     cat > backend.tf <<EOF
      #     terraform {
      #       backend "gcs" {
      #         bucket = "terraform-state-${{ secrets.GCP_PROJECT_ID }}"
      #         prefix = "microservices"
      #       }
      #     }
      #     EOF

      - name: Terraform Format Check
        run: terraform fmt -check -recursive

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        run: terraform plan -out=tfplan
        env:
          TF_VAR_github_token: ${{ secrets.GITHUB_TOKEN }}
          TF_VAR_github_org: ${{ github.repository_owner }}

      - name: Upload Terraform Plan
        uses: actions/upload-artifact@v4
        with:
          name: terraform-plan
          path: tfplan

  terraform-apply:
    runs-on: ubuntu-latest
    needs: terraform-plan
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.5.0"

      # - name: Setup Google Cloud CLI
      #   uses: google-github-actions/setup-gcloud@v2
      #   with:
      #     project_id: ${{ secrets.GCP_PROJECT_ID }}
      #     service_account_key: ${{ secrets.GCP_SA_KEY }}
      #     export_default_credentials: true

      # - name: Configure Terraform Backend
      #   run: |
      #     cat > backend.tf <<EOF
      #     terraform {
      #       backend "gcs" {
      #         bucket = "terraform-state-${{ secrets.GCP_PROJECT_ID }}"
      #         prefix = "microservices"
      #       }
      #     }
      #     EOF

      - name: Download Terraform Plan
        uses: actions/download-artifact@v4
        with:
          name: terraform-plan

      - name: Terraform Init
        run: terraform init

      - name: Terraform Apply
        run: terraform apply tfplan
        env:
          TF_VAR_github_token: ${{ secrets.GITHUB_TOKEN }}
          TF_VAR_github_org: ${{ github.repository_owner }}

      - name: Terraform Output
        run: terraform output 