name: Deploy Service

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r src/requirements.txt
          pip install pytest pytest-cov flake8

      - name: Lint with flake8
        run: |
          flake8 src/ --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 src/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Test with pytest
        run: |
          pytest tests/ --cov=src --cov-report=xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella

  build-and-deploy:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # - name: Setup Google Cloud CLI
      #   uses: google-github-actions/setup-gcloud@v2
      #   with:
      #     project_id: ${{ secrets.GCP_PROJECT_ID }}
      #     service_account_key: ${{ secrets.GCP_SA_KEY }}
      #     export_default_credentials: true

      # - name: Configure Docker
      #   run: gcloud auth configure-docker

      # - name: Build Docker image
      #   run: |
      #     docker build -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/${{ github.repository }}:${{ github.sha }} .
      #     docker tag gcr.io/${{ secrets.GCP_PROJECT_ID }}/${{ github.repository }}:${{ github.sha }} gcr.io/${{ secrets.GCP_PROJECT_ID }}/${{ github.repository }}:latest

      # - name: Push Docker image
      #   run: |
      #     docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/${{ github.repository }}:${{ github.sha }}
      #     docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/${{ github.repository }}:latest

      # - name: Deploy to Cloud Run
      #   run: |
      #     gcloud run deploy ${{ github.repository }} \
      #       --image gcr.io/${{ secrets.GCP_PROJECT_ID }}/${{ github.repository }}:${{ github.sha }} \
      #       --platform managed \
      #       --region us-central1 \
      #       --allow-unauthenticated \
      #       --port 8080 \
      #       --memory 512Mi \
      #       --cpu 1 \
      #       --max-instances 10 \
      #       --set-env-vars ENVIRONMENT=production,SERVICE_NAME=${{ github.repository }}

      # - name: Get service URL
      #   id: service-url
      #   run: |
      #     echo "url=$(gcloud run services describe ${{ github.repository }} --platform managed --region us-central1 --format 'value(status.url)')" >> $GITHUB_OUTPUT

      - name: Create Summary
        run: |
          echo "## Deployment Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Service:** ${{ github.repository }}" >> $GITHUB_STEP_SUMMARY
          echo "**Status:** GCP deployment is currently commented out" >> $GITHUB_STEP_SUMMARY
          echo "**Next Steps:**" >> $GITHUB_STEP_SUMMARY
          echo "1. Set up Google Cloud Platform credentials" >> $GITHUB_STEP_SUMMARY
          echo "2. Uncomment GCP-related steps in the workflow" >> $GITHUB_STEP_SUMMARY
          echo "3. Configure required secrets (GCP_PROJECT_ID, GCP_SA_KEY)" >> $GITHUB_STEP_SUMMARY 